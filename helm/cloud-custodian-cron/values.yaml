image:
  repository: cloudcustodian/c7n
  pullPolicy: IfNotPresent
  tag: main

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Determines whether a service account is created
  create: true
  # -- Optional service account annotations
 
  annotations:
    "eks.amazonaws.com/role-arn": "arn:aws:iam::154563028627:role/c7n-iam-role"

  name: "c7n-service-account"

# -- Optional pod annotations
podAnnotations: {}

# -- Optional pod security context
podSecurityContext: {}

securityContext: {}

scheduledPolicies: 
# - name: daily-policies
#   concurrencyPolicy: Replace
#   schedule: "* * * * *"
#   failedJobsHistoryLimit: 10
#   successfulJobsHistoryLimit: 10
#   policies:
#    - name: ec2-require-non-public-and-encrypted-volumes
#      resource: aws.ec2
#      description: |
#       Provision a lambda and cloud watch event target
#       that looks at all new instances and terminates those with
#       unencrypted volumes.
#      mode:
#       type: cloudtrail
#       role: CloudCustodian-QuickStart
#       events:
#         - RunInstances
#      filters:
#       - type: ebs
#         key: Encrypted
#         value: false
#      actions:
#       - type: notify
#         to:
#           - event-user
#           - resource-creator
#           - sergey.dzyuban@gmail.com
#         owner_absent_contact:
#           - sergey.dzyuban@gmail.com
#         # which template for the email should we use
#         template: policy-template
#         transport:
#           type: sqs
#           region: us-east-1
#           queue: c7n-notifications
- name: weekly-policies
  description: foo
  schedule: "* * * * *"
  policies:
  - name: multiple-tags-example
    comment: |
      Tags any secrets missing either the Environment or ResourceOwner tag
    resource: aws.ec2
    filters:
      - or:
        - "tag:Environment": absent
        - "tag:ResourceOwner": absent
    actions:
      - type: tag
        tags:
          Environment: Staging
          ResourceOwner: Avengers


# -- Optional resources requests/limits
resources: {}

# -- restartPolicy of CronJob
restartPolicy: Never

# -- Extra environment variables to pass to cloud custodian
envVars: {}

# -- Optional node selector rules
nodeSelector: {}

# -- Optional tolerations to apply to the pod
tolerations: []

# -- Optional affinity rules
affinity: {}

# -- Default custodian args
args:
- "run"
- "-v"
- "-s /home/custodian/output"
- "/home/custodian/policies.yaml"

persistence:
  # -- Persistence volume to save output & cache
  enabled: false
  # -- Persistence volume extra labels
  extraLabels: {}
  # -- Persistence annotations
  annotations: {}
  # -- Persistence existingClaim volume
  existingClaim: ""
  # -- Persistence volume accessMode
  accessMode: ""
  # -- Persistence volume storageSize
  storageSize: "5Gi"
  # -- Persistence storageClassName
  storageClassName: ""

secret:
  # -- Use external secret for custodian instead of using Envars as secrets
  enabled: false
  # -- secretName for custodian
  secretName: ""
  # -- secretName for custodian
  mountPath: /home/custodian/.aws
  # -- secretName readOnly
  readOnly: true
